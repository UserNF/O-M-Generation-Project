Goal: Create a program that generates O&Ms based on dictionaries created by AI data retrieval that can be easily updated with accurate information

GenSparkAI

python -m auto_py_to_exe

[TODO]
Remember to split problems into smaller sub problems

Generate O&M for one product code based on product codes from an index vs what's available in available product documents
	xConfigure "Select Index" Button to select excel doc or pdf containing index info
	xCheck the type of file to avoid errors
	Unique identifier for documents.
	Make sure the table is being cleared through Frame
	Show the O&M preview in the frame
	If pdf, search the list of available documents against the pdf index
	if excel, search the list of available docs against the excel
	Search to confirm that it's a valid index
	If couldn't find anything in the doc, prompt "Sorry, nothing found")
	Search to see if there is any data within the index that is in the product doc folder
	Create a doc that contains the contents relating to the index code
	Generate O&M Index page
	Generate datasheet after index page
	Merge pdfs together and send final O&M Manual PDF to the desired folder


















Feedback: Benefits of this O&M tool are unclear
	1. How to ensure the data uploaded is up-to-date
	2. How do we prevent competing data files for the same part
	3. How is data integrity maintained (accuracy. completeness, and consistency of data)
	4. What is the purpose of O&Ms? Unclear what the purpose of o&Ms are based on your response.

TODO
	AI Plan
		Entry AI tutorials
			Refer back to coding plan on learning AI 
			(hugging face et
		AI to automate websrapping
		Learn from other AI Developers on youtube (Look at how they solve problems through AI)
		Study the techniques they use
		
	How to auto click into results
	Organize a chart to show how easy or difficult it is to find certain codes
		Sh2b-05 - Easy
		

Solutions: AI based data retrieval solutions (WIP), 
	1. 
	4. More thoroughly explain the purpose of O&Ms using analogies (e.g., O&Ms are like a table of contents of all products needed for a job)

Issue with finding file type that isn't corrupt



How to search for missing product documents from the folder? (test each method and derive pros and cons for each(
	Manual setup?	
		Store all necessary pdfs in a pre-existing dictionary and access them through a code number
	Automated Setup?
		simply drag and drop documents in a folder to Run a full search for each document, if nothing shows up, run a partial search through each document
			It should catch 

xManual Set Up
	+Guaranteed Accuracy 
	-Limited
	-Harder to use

UI SEtup
	xCleean up current project
	xCreate a new project for UI setup
	xStructure right side in a similar way to what you're looking for
	xif no document is selected, don't create certain elements and prompt user with "please select documents screen on the right"
		Add a "no document selected prompt"
		Add simple instructions
		Understand how to remove instructions and prompt
	xAdd a way to select pdf documents to "Generate button"
	xif document selected "Clear screen"
	x"Create text windows that contain pdf data in left column"
		xFormat text

	xStart Combine Logic with UI
		Get UI to display Project name when it's selected
	

	




	xConstruct a build of the project and see if it actually generates on a separate computer
		It does without comelot 



	xExperiment with comelot alternatives
	
	xPresentation
	xDisplay contents of product literature folder through the grid
	xDisplay action buttons
	xUpdate docs real-time
		Run the loop to check for docs if an update is detected
	
	xintegrate into original system
		Make table frame object
		Contain all things inside the table frame object
		Makke sure everything works correctly
		There should be 3 main buttons, (O&M Preview, add literature button, Refresh Button)
	xCreate refresh button
	xUpdate docs by adding a refresh button
	Look for automated ways of storing pdfs
	*Major scraps
	Create new project to experiment with tag identifiers
	Create display label to contain everything in
		To make sure you can easily tranisition between panels in the program
	Fix glitch when generating preview of O&M documents
	Add a back button to go back to the docs to generate & the tech literature dictionary page
	Create button functionality to select and add documents to the product folder
		Prompt user to enter user defined values for each document
	create scroll wheel 
	Do load screen project to consider how to load different parts of the document
	Add tags to each document that store the user defined values
	*Each  Doc will have a tag->initial page that contains all user input data to be searched for creation
	Add functionality to action buttons
	Make it so you can click on product data text to open each document
	generate o&M based on different things found in literature dictionary
	implement grid display
	python syntax review
	generate O&M documents by crossreferencing the dictionary with what's in the O&M
	

	Create a new project for adding things to dictionary
		(VERY IMPORTANT) Figure out how to sync the user defined dictionary across multiple systems

	
	Add prompt when press generate button to show that the button generated correctly
		Success message somewhere that when clicked on opens the directory where the file exists
	Add ability to name document

	Figure out how to generate
	Hook generation up to the generation button

	Create what a typical directory would look like for a project
	
	Retrieve project information from the file path

	Create generate button functionality
		Generate based on project data info
	Open the generated document
	
	**Create a dictionary that
	**Generating Multiple O&Ms at once
	
	
	Make UI based on CTK radio group pane and place buttons inside
Create a button that gets the directory of the technical literature index
	directory issue

make a prompt that gets the user to enter the project name and number for the o&m index

*Check to see if all titles of each code exist within the merged documents


Generate an O&M index page that holds all product data in the correct order
genereate an O&M manual that  prints only the relevant documents

edge cases
Create a basic ui where the user can find the document to read
ask others to desing the ui based on a couple rules
Select which pdfs to read via a gui
highlighting things



contain all this within custom tkinter (adhere to the template project for this)

if there's time:
(for later) Automatic
	+Easier to use
	+unlimited
	-potentially less accurate


create a merged file that merges only the existing documents from 
	Get the order code and find the documentws










