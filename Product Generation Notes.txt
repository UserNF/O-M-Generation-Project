Goal: Create a program that generates O&Ms based on user defined dictionaries that can be easily updated with accurate information

xhow to read word documents (or pdfs) for info
xcreate word document (preferably pdfs) with text read from the original pdf
xRestructure the test pdf to match what a typical technical literature looks like
xSearch for specific titles in the pdf
xget the product codes and corresponding literature by checking a few parameters (Order Code)
	If the order code is found, then
xStore documents in folder
https://camelot-py.readthedocs.io/en/master/api.html#camelot.read_pdf
xStore the order codes and corresponding document names in a dictionary for later use in a technical literature index
How to search for missing product documents from the folder? (test each method and derive pros and cons for each(
	Manual setup?	
		Store all necessary pdfs in a pre-existing dictionary and access them through a code number
	Automated Setup?
		simply drag and drop documents in a folder to Run a full search for each document, if nothing shows up, run a partial search through each document
			It should catch 

xManual Set Up
	+Guaranteed Accuracy 
	-Limited
	-Harder to use

UI SEtup
	xCleean up current project
	xCreate a new project for UI setup
	xStructure right side in a similar way to what you're looking for
	xif no document is selected, don't create certain elements and prompt user with "please select documents screen on the right"
		Add a "no document selected prompt"
		Add simple instructions
		Understand how to remove instructions and prompt
	xAdd a way to select pdf documents to "Generate button"
	xif document selected "Clear screen"
	x"Create text windows that contain pdf data in left column"
		xFormat text

	xStart Combine Logic with UI
		Get UI to display Project name when it's selected
	

	




	xConstruct a build of the project and see if it actually generates on a separate computer
		It does without comelot 

python -m auto_py_to_exe

	xExperiment with comelot alternatives
	
	generate O&M documents by crossreferencing the dictionary with what's in the O&M
	

	Create a new project for adding things to dictionary
		(VERY IMPORTANT) Figure out how to sync the user defined dictionary across multiple systems

	
	Add prompt when press generate button to show that the button generated correctly
		Success message somewhere that when clicked on opens the directory where the file exists
	Add ability to name document

	Figure out how to generate
	Hook generation up to the generation button

	Create what a typical directory would look like for a project
	
	Retrieve project information from the file path

	Create generate button functionality
		Generate based on project data info
	Open the generated document
	
	**Create a dictionary that
	**Generating Multiple O&Ms at once
	
	
	Make UI based on CTK radio group pane and place buttons inside
Create a button that gets the directory of the technical literature index
	directory issue

make a prompt that gets the user to enter the project name and number for the o&m index

*Check to see if all titles of each code exist within the merged documents


Generate an O&M index page that holds all product data in the correct order
genereate an O&M manual that  prints only the relevant documents

edge cases
Create a basic ui where the user can find the document to read
ask others to desing the ui based on a couple rules
Select which pdfs to read via a gui
highlighting things



contain all this within custom tkinter (adhere to the template project for this)

if there's time:
(for later) Automatic
	+Easier to use
	+unlimited
	-potentially less accurate


create a merged file that merges only the existing documents from 
	Get the order code and find the documentws










